(()=>{"use strict";var e,n,r,t,o,a,i={208:(e,n,r)=>{r.r(n),r.d(n,{default:()=>c});var t=r(354),o=r.n(t),a=r(314),i=r.n(a)()(o());i.push([e.id,".send-messages-container {\n  background-color: grey;\n  border: 2px solid rgb(99, 98, 98);\n  border-radius: 8px;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.input {\n  border: 2px solid rgb(99, 98, 98);\n  margin-left: 15px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.message {\n  height: 20vh;\n  width: 80vw;\n}\n\n.nickname {\n  height: 5vh;\n  width: 15vw;\n}\n\ninput::placeholder {\n  text-align: center;\n}\n\nbutton {\n  width: 60px;\n  height: 60px;\n  margin-left: 20px;\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: inherit;\n  cursor: pointer;\n}\n\n.send {\n  font-size: 50px;\n}\n\n.message-list {\n  margin: 5px;\n  background-color: rgb(194, 223, 249);\n  border: 5px solid rgb(179, 214, 244);\n  border-radius: 8px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,iCAAiC;EACjC,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,iCAAiC;EACjC,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,WAAW;EACX,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,UAAU;EACV,YAAY;EACZ,aAAa;EACb,cAAc;EACd,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,oCAAoC;EACpC,oCAAoC;EACpC,kBAAkB;AACpB",sourcesContent:[".send-messages-container {\n  background-color: grey;\n  border: 2px solid rgb(99, 98, 98);\n  border-radius: 8px;\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.input {\n  border: 2px solid rgb(99, 98, 98);\n  margin-left: 15px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.message {\n  height: 20vh;\n  width: 80vw;\n}\n\n.nickname {\n  height: 5vh;\n  width: 15vw;\n}\n\ninput::placeholder {\n  text-align: center;\n}\n\nbutton {\n  width: 60px;\n  height: 60px;\n  margin-left: 20px;\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: inherit;\n  cursor: pointer;\n}\n\n.send {\n  font-size: 50px;\n}\n\n.message-list {\n  margin: 5px;\n  background-color: rgb(194, 223, 249);\n  border: 5px solid rgb(179, 214, 244);\n  border-radius: 8px;\n}\n"],sourceRoot:""}]);const c=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);t&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},354:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},511:(e,n,r)=>{var t=r(72),o=r.n(t),a=r(825),i=r.n(a),c=r(659),s=r.n(c),d=r(56),u=r.n(d),l=r(540),p=r.n(l),f=r(113),h=r.n(f),m=r(208),v={};v.styleTagTransform=h(),v.setAttributes=u(),v.insert=s().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=p();var A=o()(m.default,v);if(!m.default.locals||e.hot.invalidate){var y=!m.default.locals,g=y?m:m.default.locals;e.hot.accept(208,(n=>{m=r(208),function(e,n,r){if(!e&&n||e&&!n)return!1;var t;for(t in e)if((!r||"default"!==t)&&e[t]!==n[t])return!1;for(t in n)if(!(r&&"default"===t||e[t]))return!1;return!0}(g,y?m:m.default.locals,y)?(g=y?m:m.default.locals,A(m.default)):e.hot.invalidate()}))}e.hot.dispose((function(){A()})),m.default&&m.default.locals&&m.default.locals},72:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=t.base?s[0]+t.base:s[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var p=r(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var h=o(f,t);t.byIndex=c,n.splice(c,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function o(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,o){var a=t(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=r(a[i]);n[c].references--}for(var s=t(e,o),d=0;d<a.length;d++){var u=r(a[d]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},659:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},962:(e,n,r)=>{r.d(n,{O:()=>a});var t=r(928),o=r(457);function a(){const e=document.querySelector(".send-messages-container"),n=document.createElement("div"),r=document.createElement("input");r.placeholder="Enter your message",r.className="input message",n.append(r),function(e){const n=document.createElement("button");n.className="send";const r=document.createElement("div");r.innerHTML="&#x1F4E8",r.className="send",n.append(r),e.append(n)}(n),e.append(n),function(){const e=document.querySelector(".nickname"),n=document.querySelector(".message");document.querySelector(".send").addEventListener("click",(async()=>{const r=document.querySelector(".messages"),a={nickname:e.value,message:n.value};e.value="",n.value="",(0,t._)(a);const i=await(0,t.L)();(0,o.N)(i,r),window.scrollTo(0,document.body.scrollHeight)}))}()}},457:(e,n,r)=>{function t(e,n){e.forEach((e=>{const r=document.createElement("div");r.classList="message-list",n.append(r);const t=document.createElement("h3");t.style="margin-left: 10px",t.textContent=e.nickname||e.name;const o=document.createElement("p");o.style="margin-left: 10px; font-size: 15px;",o.textContent=e.message;const a=document.createElement("h4");a.style="margin-left: 10px; color: grey;",a.textContent=e.date,r.append(t),r.append(o),r.append(a)}))}r.d(n,{N:()=>t})},973:(e,n,r)=>{function t(){const e=document.querySelector(".send-messages-container"),n=document.createElement("input");n.placeholder="Enter your nickname",n.className="input nickname",e.append(n)}r.d(n,{t:()=>t})},44:(e,n,r)=>{r.a(e,(async(e,n)=>{try{var t=r(928),o=r(457),a=r(962),i=r(973);r(511);const e=document.querySelector(".messages"),c=await(0,t.L)();(0,o.N)(c,e),(0,i.t)(),(0,a.O)(),window.scrollTo(0,document.body.scrollHeight),n()}catch(e){n(e)}}),1)},928:(e,n,r)=>{r.d(n,{L:()=>o,_:()=>a});const t={firebaseBaseUrl:"https://otus-js-chat-4ed79-default-rtdb.firebaseio.com",firebaseCollection:"messages.json"};async function o(){return fetch(`${t.firebaseBaseUrl}/${t.firebaseCollection}`,{headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>e.json())).then((e=>Object.values(e).map((e=>({...e,date:new Date(e.date)})))))}async function a(e){return fetch(`${t.firebaseBaseUrl}/${t.firebaseCollection}`,{method:"POST",body:JSON.stringify({...e,date:new Date}),headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>e.json()))}window.sendMessage=a,window.getMessagesList=o,window.observeWithXHR=function(e){const n=new XMLHttpRequest;let r=0;n.addEventListener("progress",(()=>{const t=n.response.substr(r);r=n.response.length;const o=t.match(/event: (.+)/)[1],a=JSON.parse(t.match(/data: (.+)/)[1]);"put"===o&&e(a.data)})),n.open("POST",`${t.firebaseBaseUrl}/${t.firebaseCollection}`,!0),n.setRequestHeader("Accept","text/event-stream"),n.send()},window.observeWithEventSource=function(e){new EventSource(`${t.firebaseBaseUrl}/${t.firebaseCollection}`).addEventListener("put",(n=>e(JSON.parse(n.data).data)))}}},c={};function s(e){var n=c[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var r=c[e]={id:e,exports:{}};try{var t={id:e,module:r,factory:i[e],require:s};s.i.forEach((function(e){e(t)})),r=t.module,t.factory.call(r.exports,r,r.exports,t.require)}catch(e){throw r.error=e,e}return r.exports}s.m=i,s.c=c,s.i=[],e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",n="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",r="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",t=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},s.a=(o,a,i)=>{var c;i&&((c=[]).d=-1);var s,d,u,l=new Set,p=o.exports,f=new Promise(((e,n)=>{u=n,d=e}));f[n]=p,f[e]=e=>(c&&e(c),l.forEach(e),f.catch((e=>{}))),o.exports=f,a((o=>{var a;s=(o=>o.map((o=>{if(null!==o&&"object"==typeof o){if(o[e])return o;if(o.then){var a=[];a.d=0,o.then((e=>{i[n]=e,t(a)}),(e=>{i[r]=e,t(a)}));var i={};return i[e]=e=>e(a),i}}var c={};return c[e]=e=>{},c[n]=o,c})))(o);var i=()=>s.map((e=>{if(e[r])throw e[r];return e[n]})),d=new Promise((n=>{(a=()=>n(i)).r=0;var r=e=>e!==c&&!l.has(e)&&(l.add(e),e&&!e.d&&(a.r++,e.push(a)));s.map((n=>n[e](r)))}));return a.r?d:i()}),(e=>(e?u(f[r]=e):d(p),t(c)))),c&&c.d<0&&(c.d=0)},s.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return s.d(n,{a:n}),n},s.d=(e,n)=>{for(var r in n)s.o(n,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},s.hu=e=>e+"."+s.h()+".hot-update.js",s.hmrF=()=>"main."+s.h()+".hot-update.json",s.h=()=>"41c6526b6040f99a2ed6",s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),o={},a="redux-chat:",s.l=(e,n,r,t)=>{if(o[e])o[e].push(n);else{var i,c;if(void 0!==r)for(var d=document.getElementsByTagName("script"),u=0;u<d.length;u++){var l=d[u];if(l.getAttribute("src")==e||l.getAttribute("data-webpack")==a+r){i=l;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,s.nc&&i.setAttribute("nonce",s.nc),i.setAttribute("data-webpack",a+r),i.src=e),o[e]=[n];var p=(n,r)=>{i.onerror=i.onload=null,clearTimeout(f);var t=o[e];if(delete o[e],i.parentNode&&i.parentNode.removeChild(i),t&&t.forEach((e=>e(r))),n)return n(r)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),c&&document.head.appendChild(i)}},s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,r,t={},o=s.c,a=[],i=[],c="idle",d=0,u=[];function l(e){c=e;for(var n=[],r=0;r<i.length;r++)n[r]=i[r].call(null,e);return Promise.all(n).then((function(){}))}function p(){0==--d&&l("ready").then((function(){if(0===d){var e=u;u=[];for(var n=0;n<e.length;n++)e[n]()}}))}function f(e){if("idle"!==c)throw new Error("check() is only allowed in idle status");return l("check").then(s.hmrM).then((function(r){return r?l("prepare").then((function(){var t=[];return n=[],Promise.all(Object.keys(s.hmrC).reduce((function(e,o){return s.hmrC[o](r.c,r.r,r.m,e,n,t),e}),[])).then((function(){return n=function(){return e?m(e):l("ready").then((function(){return t}))},0===d?n():new Promise((function(e){u.push((function(){e(n())}))}));var n}))})):l(v()?"ready":"idle").then((function(){return null}))}))}function h(e){return"ready"!==c?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+c+")")})):m(e)}function m(e){e=e||{},v();var t=n.map((function(n){return n(e)}));n=void 0;var o=t.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return l("abort").then((function(){throw o[0]}));var a=l("dispose");t.forEach((function(e){e.dispose&&e.dispose()}));var i,c=l("apply"),s=function(e){i||(i=e)},d=[];return t.forEach((function(e){if(e.apply){var n=e.apply(s);if(n)for(var r=0;r<n.length;r++)d.push(n[r])}})),Promise.all([a,c]).then((function(){return i?l("fail").then((function(){throw i})):r?m(e).then((function(e){return d.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):l("idle").then((function(){return d}))}))}function v(){if(r)return n||(n=[]),Object.keys(s.hmrI).forEach((function(e){r.forEach((function(r){s.hmrI[e](r,n)}))})),r=void 0,!0}s.hmrD=t,s.i.push((function(u){var m,v,A,y,g=u.module,b=function(n,r){var t=o[r];if(!t)return n;var i=function(i){if(t.hot.active){if(o[i]){var c=o[i].parents;-1===c.indexOf(r)&&c.push(r)}else a=[r],e=i;-1===t.children.indexOf(i)&&t.children.push(i)}else console.warn("[HMR] unexpected require("+i+") from disposed module "+r),a=[];return n(i)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(r){n[e]=r}}};for(var u in n)Object.prototype.hasOwnProperty.call(n,u)&&"e"!==u&&Object.defineProperty(i,u,s(u));return i.e=function(e,r){return function(e){switch(c){case"ready":l("prepare");case"prepare":return d++,e.then(p,p),e;default:return e}}(n.e(e,r))},i}(u.require,u.id);g.hot=(m=u.id,v=g,y={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:A=e!==m,_requireSelf:function(){a=v.parents.slice(),e=A?void 0:m,s(m)},active:!0,accept:function(e,n,r){if(void 0===e)y._selfAccepted=!0;else if("function"==typeof e)y._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)y._acceptedDependencies[e[t]]=n||function(){},y._acceptedErrorHandlers[e[t]]=r;else y._acceptedDependencies[e]=n||function(){},y._acceptedErrorHandlers[e]=r},decline:function(e){if(void 0===e)y._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)y._declinedDependencies[e[n]]=!0;else y._declinedDependencies[e]=!0},dispose:function(e){y._disposeHandlers.push(e)},addDisposeHandler:function(e){y._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=y._disposeHandlers.indexOf(e);n>=0&&y._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,c){case"idle":n=[],Object.keys(s.hmrI).forEach((function(e){s.hmrI[e](m,n)})),l("ready");break;case"ready":Object.keys(s.hmrI).forEach((function(e){s.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(m)}},check:f,apply:h,status:function(e){if(!e)return c;i.push(e)},addStatusHandler:function(e){i.push(e)},removeStatusHandler:function(e){var n=i.indexOf(e);n>=0&&i.splice(n,1)},data:t[m]},e=void 0,y),g.parents=a,g.children=[],a=[],u.require=b})),s.hmrC={},s.hmrI={}})(),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var n=s.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var t=r.length-1;t>-1&&(!e||!/^http(s?):/.test(e));)e=r[t--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),(()=>{var e,n,r,t,o,a=s.hmrS_jsonp=s.hmrS_jsonp||{792:0},i={};function c(n,r){return e=r,new Promise(((e,r)=>{i[n]=e;var t=s.p+s.hu(n),o=new Error;s.l(t,(e=>{if(i[n]){i[n]=void 0;var t=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;o.message="Loading hot update chunk "+n+" failed.\n("+t+": "+a+")",o.name="ChunkLoadError",o.type=t,o.request=a,r(o)}}))}))}function d(e){function i(e){for(var n=[e],r={},t=n.map((function(e){return{chain:[e],id:e}}));t.length>0;){var o=t.pop(),a=o.id,i=o.chain,d=s.c[a];if(d&&(!d.hot._selfAccepted||d.hot._selfInvalidated)){if(d.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:a};if(d.hot._main)return{type:"unaccepted",chain:i,moduleId:a};for(var u=0;u<d.parents.length;u++){var l=d.parents[u],p=s.c[l];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:i.concat([l]),moduleId:a,parentId:l};-1===n.indexOf(l)&&(p.hot._acceptedDependencies[a]?(r[l]||(r[l]=[]),c(r[l],[a])):(delete r[l],n.push(l),t.push({chain:i.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:r}}function c(e,n){for(var r=0;r<n.length;r++){var t=n[r];-1===e.indexOf(t)&&e.push(t)}}s.f&&delete s.f.jsonpHmr,n=void 0;var d={},u=[],l={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in r)if(s.o(r,f)){var h,m=r[f],v=!1,A=!1,y=!1,g="";switch((h=m?i(f):{type:"disposed",moduleId:f}).chain&&(g="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(v=new Error("Aborted because of self decline: "+h.moduleId+g));break;case"declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(v=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+g));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(h),e.ignoreUnaccepted||(v=new Error("Aborted because "+f+" is not accepted"+g));break;case"accepted":e.onAccepted&&e.onAccepted(h),A=!0;break;case"disposed":e.onDisposed&&e.onDisposed(h),y=!0;break;default:throw new Error("Unexception type "+h.type)}if(v)return{error:v};if(A)for(f in l[f]=m,c(u,h.outdatedModules),h.outdatedDependencies)s.o(h.outdatedDependencies,f)&&(d[f]||(d[f]=[]),c(d[f],h.outdatedDependencies[f]));y&&(c(u,[h.moduleId]),l[f]=p)}r=void 0;for(var b,E=[],w=0;w<u.length;w++){var C=u[w],x=s.c[C];x&&(x.hot._selfAccepted||x.hot._main)&&l[C]!==p&&!x.hot._selfInvalidated&&E.push({module:C,require:x.hot._requireSelf,errorHandler:x.hot._selfAccepted})}return{dispose:function(){var e;t.forEach((function(e){delete a[e]})),t=void 0;for(var n,r=u.slice();r.length>0;){var o=r.pop(),i=s.c[o];if(i){var c={},l=i.hot._disposeHandlers;for(w=0;w<l.length;w++)l[w].call(null,c);for(s.hmrD[o]=c,i.hot.active=!1,delete s.c[o],delete d[o],w=0;w<i.children.length;w++){var p=s.c[i.children[w]];p&&(e=p.parents.indexOf(o))>=0&&p.parents.splice(e,1)}}}for(var f in d)if(s.o(d,f)&&(i=s.c[f]))for(b=d[f],w=0;w<b.length;w++)n=b[w],(e=i.children.indexOf(n))>=0&&i.children.splice(e,1)},apply:function(n){for(var r in l)s.o(l,r)&&(s.m[r]=l[r]);for(var t=0;t<o.length;t++)o[t](s);for(var a in d)if(s.o(d,a)){var i=s.c[a];if(i){b=d[a];for(var c=[],p=[],f=[],h=0;h<b.length;h++){var m=b[h],v=i.hot._acceptedDependencies[m],A=i.hot._acceptedErrorHandlers[m];if(v){if(-1!==c.indexOf(v))continue;c.push(v),p.push(A),f.push(m)}}for(var y=0;y<c.length;y++)try{c[y].call(null,b)}catch(r){if("function"==typeof p[y])try{p[y](r,{moduleId:a,dependencyId:f[y]})}catch(t){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:f[y],error:t,originalError:r}),e.ignoreErrored||(n(t),n(r))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:a,dependencyId:f[y],error:r}),e.ignoreErrored||n(r)}}}for(var g=0;g<E.length;g++){var w=E[g],C=w.module;try{w.require(C)}catch(r){if("function"==typeof w.errorHandler)try{w.errorHandler(r,{moduleId:C,module:s.c[C]})}catch(t){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:C,error:t,originalError:r}),e.ignoreErrored||(n(t),n(r))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:C,error:r}),e.ignoreErrored||n(r)}}return u}}}self.webpackHotUpdateredux_chat=(n,t,a)=>{for(var c in t)s.o(t,c)&&(r[c]=t[c],e&&e.push(c));a&&o.push(a),i[n]&&(i[n](),i[n]=void 0)},s.hmrI.jsonp=function(e,n){r||(r={},o=[],t=[],n.push(d)),s.o(r,e)||(r[e]=s.m[e])},s.hmrC.jsonp=function(e,i,u,l,p,f){p.push(d),n={},t=i,r=u.reduce((function(e,n){return e[n]=!1,e}),{}),o=[],e.forEach((function(e){s.o(a,e)&&void 0!==a[e]?(l.push(c(e,f)),n[e]=!0):n[e]=!1})),s.f&&(s.f.jsonpHmr=function(e,r){n&&s.o(n,e)&&!n[e]&&(r.push(c(e)),n[e]=!0)})},s.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(s.p+s.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),s.nc=void 0,s(44)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,